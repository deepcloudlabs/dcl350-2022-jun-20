server.port=10800

management.endpoints.web.exposure.include=*
management.endpoint.retries.enabled=true
management.endpoint.retryevents.enabled=true
management.endpoint.circuitbreakers.enabled=true
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true
management.endpoint.health.enabled=true

# retry
resilience4j.retry.instances.lottery.max-attempts=5
resilience4j.retry.instances.lottery.wait-duration=1s
resilience4j.retry.instances.lottery.retry-exceptions=java.lang.Throwable
resilience4j.retry.instances.lottery.enable-exponential-backoff=true
resilience4j.retry.instances.lottery.exponential-backoff-multiplier=2

#rate-limiter
resilience4j.ratelimiter.instances.lottery.limit-for-period=1
resilience4j.ratelimiter.instances.lottery.limit-refresh-period=10s

#time-limiter
resilience4j.timelimiter.instances.lottery.timeout-duration=1s
resilience4j.timelimiter.instances.lottery.cancel-running-future=true

#circuit-breaker
# CLOSED -- threshold --> OPEN 
resilience4j.circuitbreaker.instances.lottery.failure-rate-threshold=20
# OPEN -- after 3s --> HALF-OPEN
resilience4j.circuitbreaker.instances.lottery.wait-duration-in-open-state=3s
# HALF-OPEN -- more than 5 call is successful --> CLOSED
# HALF-OPEN -- more than 4 call has failed    --> OPEN
resilience4j.circuitbreaker.instances.lottery.permitted-number-of-calls-in-half-open-state=10
resilience4j.circuitbreaker.instances.lottery.minimum-number-of-calls=6
resilience4j.circuitbreaker.instances.lottery.max-wait-duration-in-half-open-state=5s
resilience4j.circuitbreaker.instances.lottery.register-health-indicator=true
resilience4j.circuitbreaker.metrics.enabled=true
management.endpoint.circuitbreakerevents.enabled=true
management.endpoint.streamcircuitbreakerevents.enabled=true

